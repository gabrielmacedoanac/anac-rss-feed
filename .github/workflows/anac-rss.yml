name: ANAC RSS Feed Generator

on:
  schedule:
    - cron: '0 */6 * * *'  # Executa a cada 6 horas
  workflow_dispatch:       # Permite acionamento manual

jobs:
  generate-feeds:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: '1.40.x'

      - name: Generate feeds
        run: |
          cat << 'EOF' > script.ts
          import { Feed } from "https://esm.sh/feed@4.2.2";
          import { parse } from "https://deno.land/x/html_parser@v1.0.0/mod.ts";

          const ANAC_URL = "https://www.gov.br/anac/pt-br/noticias";

          async function generateFeeds() {
            try {
              // 1. Fetch and parse HTML
              const response = await fetch(ANAC_URL);
              const html = await response.text();
              const doc = parse(html);

              // 2. Extract news items
              const newsItems = Array.from(doc.querySelectorAll("article.tileItem"))
                .slice(0, 20)
                .map((article) => {
                  const title = article.querySelector("h2.tileHeadline a")?.textContent?.trim() || "Sem tÃ­tulo";
                  const relativeLink = article.querySelector("h2.tileHeadline a")?.getAttribute("href") || "";
                  const link = relativeLink.startsWith("http") ? relativeLink : `${ANAC_URL}${relativeLink}`;
                  
                  return {
                    title,
                    link,
                    description: article.querySelector("p.tileBody span.description")?.textContent?.trim() || "",
                    date: new Date().toISOString() // Adapte conforme necessÃ¡rio
                  };
                });

              // 3. Generate JSON
              await Deno.writeTextFile(
                "anac-news.json",
                JSON.stringify({
                  generatedAt: new Date().toISOString(),
                  source: ANAC_URL,
                  items: newsItems
                }, null, 2)
              );

              // 4. Generate RSS
              const feed = new Feed({
                title: "ANAC NotÃ­cias",
                description: "Feed RSS das notÃ­cias da AgÃªncia Nacional de AviaÃ§Ã£o Civil",
                id: ANAC_URL,
                link: ANAC_URL,
                updated: new Date(),
                generator: "Deno Feed Generator"
              });

              newsItems.forEach(item => {
                feed.addItem({
                  title: item.title,
                  id: item.link,
                  link: item.link,
                  description: item.description,
                  date: new Date(item.date)
                });
              });

              await Deno.writeTextFile("anac-news.rss.xml", feed.rss2());
              console.log("Feeds gerados com sucesso!");

            } catch (error) {
              console.error("Erro ao gerar feeds:", error);
              Deno.exit(1);
            }
          }

          await generateFeeds();
          EOF

          deno run --allow-net --allow-read --allow-write script.ts

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: anac-feeds
          path: |
            anac-news.json
            anac-news.rss.xml

      - name: Commit to repository
        run: |
          mkdir -p feeds
          mv anac-news.json feeds/
          mv anac-news.rss.xml feeds/
          
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add feeds/
          git commit -m "ðŸ“Œ AtualizaÃ§Ã£o automÃ¡tica dos feeds [$(date +'%d/%m/%Y %H:%M')]" || echo "Nenhuma alteraÃ§Ã£o para commitar"
          git push
