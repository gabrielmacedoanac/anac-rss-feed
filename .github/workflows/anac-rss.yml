name: ANAC RSS Feed Generator

on:
  schedule:
    - cron: '0 */6 * * *'  # Executa a cada 6 horas
  workflow_dispatch:

jobs:
  generate-feeds:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: '1.40.x'

      - name: Generate feeds
        run: |
          cat << 'EOF' > script.ts
          import { Feed } from "https://esm.sh/feed@4.2.2";
          import { DOMParser } from "https://deno.land/x/deno_dom@v0.1.45/deno-dom-wasm.ts";

          const ANAC_URL = "https://www.gov.br/anac/pt-br/noticias";

          async function generateFeeds() {
            try {
              // 1. Fetch HTML
              console.log("‚è≥ Buscando HTML...");
              const response = await fetch(ANAC_URL);
              const html = await response.text();
              
              // 2. Parse HTML usando deno-dom
              console.log("üîç Analisando HTML...");
              const doc = new DOMParser().parseFromString(html, "text/html");
              if (!doc) throw new Error("Falha ao parsear HTML");

              // 3. Extract news items
              console.log("üì¶ Extraindo not√≠cias...");
              const newsItems = Array.from(doc.querySelectorAll("article.tileItem"))
                .slice(0, 20)
                .map((article) => {
                  const titleElem = article.querySelector("h2.tileHeadline a");
                  const relativeLink = titleElem?.getAttribute("href") || "";
                  const link = relativeLink.startsWith("http") 
                    ? relativeLink 
                    : `${ANAC_URL}${relativeLink}`;
                  
                  return {
                    title: titleElem?.textContent?.trim() || "Sem t√≠tulo",
                    link: link,
                    description: article.querySelector("p.tileBody span.description")?.textContent?.trim() || "",
                    date: new Date().toISOString()
                  };
                });

              // 4. Generate JSON
              console.log("üìù Gerando JSON...");
              await Deno.writeTextFile(
                "anac-news.json",
                JSON.stringify({
                  generatedAt: new Date().toISOString(),
                  source: ANAC_URL,
                  count: newsItems.length,
                  items: newsItems
                }, null, 2)
              );

              // 5. Generate RSS
              console.log("üì° Gerando RSS...");
              const feed = new Feed({
                title: "ANAC Not√≠cias",
                description: "Feed RSS das not√≠cias da Ag√™ncia Nacional de Avia√ß√£o Civil",
                id: ANAC_URL,
                link: ANAC_URL,
                updated: new Date(),
                generator: "Deno Feed Generator"
              });

              newsItems.forEach(item => {
                feed.addItem({
                  title: item.title,
                  id: item.link,
                  link: item.link,
                  description: item.description,
                  date: new Date(item.date)
                });
              });

              await Deno.writeTextFile("anac-news.rss.xml", feed.rss2());
              console.log("‚úÖ Feeds gerados com sucesso!");

            } catch (error) {
              console.error("‚ùå Erro ao gerar feeds:", error);
              Deno.exit(1);
            }
          }

          // Inicializa deno-dom e executa
          console.log("üîÑ Inicializando parser HTML...");
          const { document, Node, HTMLElement } = await import("https://deno.land/x/deno_dom@v0.1.45/src/dom.ts");
          await generateFeeds();
          EOF

          deno run --allow-net --allow-read --allow-write --unstable script.ts

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: anac-feeds
          path: |
            anac-news.json
            anac-news.rss.xml

      - name: Commit to repository
        run: |
          mkdir -p feeds
          mv anac-news.json feeds/
          mv anac-news.rss.xml feeds/
          
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add feeds/
          git commit -m "üìå Atualiza√ß√£o autom√°tica dos feeds [$(date +'%d/%m/%Y %H:%M')]" || echo "Nenhuma altera√ß√£o para commitar"
          git push
        
